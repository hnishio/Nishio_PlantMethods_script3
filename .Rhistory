mvtime <- mvtime[!is.na(rowSums(mvtime)),]
## Boxplot of signaling speed
for(i in 1:9){
eval(parse(text = paste0("
lm_cell", i, " <- RobustLinearReg::siegel_regression(distance ~ start_time, data = mvtime[mvtime$cell==", i, ",])"
)))
}
signalingspeed <- c(lm_cell1$coefficients[2], lm_cell2$coefficients[2], lm_cell3$coefficients[2],
lm_cell4$coefficients[2], lm_cell5$coefficients[2], lm_cell6$coefficients[2],
lm_cell7$coefficients[2], lm_cell8$coefficients[2], lm_cell9$coefficients[2])
df_sig <- data.frame(category = rep("Cell 1-9", 9),
signalingspeed = signalingspeed)
g_sig <- ggplot(df_sig, aes(x = category, y = signalingspeed)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(size = 0.8, alpha = 0.5) +
theme_bw() +
theme(plot.title=element_text(size=7),
axis.title.y=element_text(size=7),
axis.title.x=element_blank(),
axis.text=element_text(size=7),
plot.tag = element_text(size = 12, face = "bold")) +
labs(y=bquote(paste("Signal transfer speed ", (mu*m/min), sep = "")))
g_sig
df_sig
quantile(df_sig$signalingspeed)
data("Paramecium")
Paramecium
Paramecium[,1:3]
citation(RobustLinearReg)
citation("RobustLinearReg")
citation("exactRankTests")
# Load packages
library(cellssm)
library(ggplot2)
# Load data
cell1 <- read.csv("data/WT_cell1_v4.csv")
cell2 <- read.csv("data/cell2.csv")
cell3 <- read.csv("data/cell3.csv")
cell4 <- read.csv("data/cell4.csv")
cell5 <- read.csv("data/WT_cell5_v3.csv")
cell6 <- read.csv("data/WT_cell6_v3.csv")
cell7 <- read.csv("data/WT_cell7_v3.csv")
cell8 <- read.csv("data/WT_cell8_v3.csv")
cell9 <- read.csv("data/WT_cell9_v3.csv")
cell_list <- list(cell1, cell2, cell3, cell4, cell5, cell6, cell7, cell8, cell9)
visual <- read.csv("data/visual_judgement.csv")
### Predict movement (best parameters)
df_cor <- as.data.frame(data.table::fread(file = paste0(out, "/grid_cor_mae_rmse.csv")))
# Create output directory
out <- "04_nomodel"
if(file.exists(out)==F){
dir.create(out, recursive=T)
}
### Predict movement (best parameters)
df_cor <- as.data.frame(data.table::fread(file = paste0(out, "/grid_cor_mae_rmse.csv")))
df_cor <- df_cor[df_cor$no_data>100,]
#df_cor <- df_cor[df_cor$consecutive==1,]
df_cor_best1 <- df_cor[which.max(df_cor$cor),]
df_cor_best2 <- df_cor[which.min(df_cor$mae),]
df_cor_best3 <- df_cor[which.min(df_cor$rmse),]
df_cor_best4 <- df_cor[which.max(df_cor$no_perfect),]
df_cor_best <- df_cor_best3
df_cor_best
sum(cell_list[[1]]$ex == 1)
# Load packages
library(cellssm)
library(tidyverse)
library(patchwork)
library(gt)
# Create output directory
out <- "14_signal_pairwise"
if(file.exists(out)==F){
dir.create(out, recursive=T)
}
# Load plot function
source("functions/Plot_functions.R")
# Load data
cell1 <- read.csv("data/WT_cell1_v4.csv")
cell2 <- read.csv("data/cell2.csv")
cell3 <- read.csv("data/cell3.csv")
cell4 <- read.csv("data/cell4.csv")
cell5 <- read.csv("data/WT_cell5_v3.csv")
cell6 <- read.csv("data/WT_cell6_v3.csv")
cell7 <- read.csv("data/WT_cell7_v3.csv")
cell8 <- read.csv("data/WT_cell8_v3.csv")
cell9 <- read.csv("data/WT_cell9_v3.csv")
cell_list <- list(cell1, cell2, cell3, cell4, cell5, cell6, cell7, cell8, cell9)
mvtime <- as.data.frame(data.table::fread("04_nomodel/nomodel_chloroplast_mvtime.csv"))
## Edit data
mvtime$distance <- as.numeric(c(cell1[30,-(1:2)], cell2[30,-(1:2)], cell3[30,-(1:2)], cell4[30,-(1:2)],
cell5[30,-(1:2)], cell6[30,-(1:2)], cell7[30,-(1:2)], cell8[30,-(1:2)],
cell9[30,-(1:2)]))
mvtime <- mvtime[!is.na(rowSums(mvtime)),]
## Line plot (x: start time, y: distance) for aligned chloroplasts
df_align <- as.data.frame(data.table::fread("data/chl_align.csv"))
## All combinations
no_combs <- NULL
no_posis <- NULL
no_negas <- NULL
for(i in 1:9){
data <- mvtime[mvtime$cell==i,]
align <- as.data.frame(t(combn(x = data$chloroplast, m = 2)))
names(align) <- c("from", "to")
no_combs <- c(no_combs, nrow(align))
no_positive <- 0
no_negative <- 0
for(j in 1:nrow(align)){
x_from <- data[data$chloroplast == align$from[j],"start_time"]
x_to <- data[data$chloroplast == align$to[j],"start_time"]
y_from <- data[data$chloroplast == align$from[j],"distance"]
y_to <- data[data$chloroplast == align$to[j],"distance"]
if((y_to - y_from) / (x_to - x_from) >= 0){
no_positive <- no_positive + 1
}else{
no_negative <- no_negative + 1
}
}#for(j in 1:nrow(align)){
no_posis <- c(no_posis, no_positive)
no_negas <- c(no_negas, no_negative)
}#for(i in 1:9){
sum_no_combs <- sum(no_combs)
sum_no_posis <- sum(no_posis)
sum_no_negas <- sum(no_negas)
## aligned
no_combs <- NULL
no_posis <- NULL
no_negas <- NULL
for(i in 1:9){
data <- mvtime[mvtime$cell==i,]
align <- df_align[df_align$cell==i,]
rem_chl <- base::setdiff(unique(c(align$from, align$to)), data$chl)
if(length(rem_chl) != 0){
align <- align[!(align$from==rem_chl | align$to==rem_chl),]
}
no_combs <- c(no_combs, nrow(align))
no_positive <- 0
no_negative <- 0
for(j in 1:nrow(align)){
if(sum(data$chloroplast == align$from[j]) > 0 & sum(data$chloroplast == align$to[j]) > 0){
x_from <- data[data$chloroplast == align$from[j],"start_time"]
x_to <- data[data$chloroplast == align$to[j],"start_time"]
y_from <- data[data$chloroplast == align$from[j],"distance"]
y_to <- data[data$chloroplast == align$to[j],"distance"]
if((y_to - y_from) / (x_to - x_from) >= 0){
no_positive <- no_positive + 1
}else{
no_negative <- no_negative + 1
}
}#if(sum(data$chloroplast ==
}#for(j in 1:nrow(align)){
no_posis <- c(no_posis, no_positive)
no_negas <- c(no_negas, no_negative)
}#for(i in 1:9){
sum_no_align <- sum(no_combs)
sum_no_align_posis <- sum(no_posis)
sum_no_align_negas <- sum(no_negas)
sum_no_notalign_posis <- sum_no_posis - sum_no_align_posis
sum_no_notalign_negas <- sum_no_negas - sum_no_align_negas
sum_no_notalign <- sum_no_notalign_posis + sum_no_notalign_negas
df_chi <- data.frame(align = rep(c("yes", "no"), 2),
sign = rep(c("posi", "nega"), each = 2),
num = c(sum_no_align_posis, sum_no_notalign_posis,
sum_no_align_negas, sum_no_notalign_negas))
xtab_chi <- stats::xtabs(formula = num~., data = df_chi)
(fisher_res <- fisher.test(xtab_chi))
names(fisher_res)
help(fisher.test)
# Load packages
library(cellssm)
library(ggplot2)
library(patchwork)
# Create output directory
out <- "13_signaltime_vs_totaltime"
if(file.exists(out)==F){
dir.create(out, recursive=T)
}
# Load data
cell1 <- read.csv("data/WT_cell1_v4.csv")
cell2 <- read.csv("data/cell2.csv")
cell3 <- read.csv("data/cell3.csv")
cell4 <- read.csv("data/cell4.csv")
cell5 <- read.csv("data/WT_cell5_v3.csv")
cell6 <- read.csv("data/WT_cell6_v3.csv")
cell7 <- read.csv("data/WT_cell7_v3.csv")
cell8 <- read.csv("data/WT_cell8_v3.csv")
cell9 <- read.csv("data/WT_cell9_v3.csv")
cell_list <- list(cell1, cell2, cell3, cell4, cell5, cell6, cell7, cell8, cell9)
visual <- read.csv("data/visual_judgement.csv")
mvtime <- as.data.frame(data.table::fread("04_nomodel/nomodel_chloroplast_mvtime.csv"))
## Edit data
mvtime$distance <- as.numeric(c(cell1[30,-(1:2)], cell2[30,-(1:2)], cell3[30,-(1:2)], cell4[30,-(1:2)],
cell5[30,-(1:2)], cell6[30,-(1:2)], cell7[30,-(1:2)], cell8[30,-(1:2)],
cell9[30,-(1:2)]))
mvtime <- mvtime[!is.na(rowSums(mvtime)),]
## Linear regression
for(i in 1:9){
eval(parse(text = paste0("
lm_cell", i, " <- RobustLinearReg::siegel_regression(distance ~ start_time, data = mvtime[mvtime$cell==", i, ",])"
)))
}
lm_allcells <- RobustLinearReg::siegel_regression(distance ~ start_time, data = mvtime)
medsig <- median(c(lm_cell1$coefficients[2], lm_cell2$coefficients[2], lm_cell3$coefficients[2],
lm_cell4$coefficients[2], lm_cell5$coefficients[2], lm_cell6$coefficients[2],
lm_cell7$coefficients[2], lm_cell8$coefficients[2], lm_cell9$coefficients[2]))
for(i in 1:9){
eval(parse(text = paste0("
signaling_time_cell", i, " <- mvtime[mvtime$cell==", i, ",]$distance / medsig
start_time_cell", i, " <- mvtime[mvtime$cell==", i, ",]$start_time"
)))
}
signaling_time_allcells <- mvtime$distance / medsig
start_time_allcells <- mvtime$start_time
## Boxplot
df_cat_signaling <- data.frame(
cell=c(rep("Cell 1", length(start_time_cell1)),
rep("Cell 2", length(start_time_cell2)),
rep("Cell 3", length(start_time_cell3)),
rep("Cell 4", length(start_time_cell4)),
rep("Cell 5", length(start_time_cell5)),
rep("Cell 6", length(start_time_cell6)),
rep("Cell 7", length(start_time_cell7)),
rep("Cell 8", length(start_time_cell8)),
rep("Cell 9", length(start_time_cell9)),
rep("Cell 1", length(signaling_time_cell1)),
rep("Cell 2", length(signaling_time_cell2)),
rep("Cell 3", length(signaling_time_cell3)),
rep("Cell 4", length(signaling_time_cell4)),
rep("Cell 5", length(signaling_time_cell5)),
rep("Cell 6", length(signaling_time_cell6)),
rep("Cell 7", length(signaling_time_cell7)),
rep("Cell 8", length(signaling_time_cell8)),
rep("Cell 9", length(signaling_time_cell9))),
STorSIG = c(rep("Total reaction time",
length(start_time_cell1)+length(start_time_cell2)+length(start_time_cell3)+
length(start_time_cell4)+length(start_time_cell5)+length(start_time_cell6)+
length(start_time_cell7)+length(start_time_cell8)+length(start_time_cell9)),
rep("Signaling time",
length(signaling_time_cell1)+length(signaling_time_cell2)+length(signaling_time_cell3)+
length(signaling_time_cell4)+length(signaling_time_cell5)+length(signaling_time_cell6)+
length(signaling_time_cell7)+length(signaling_time_cell8)+length(signaling_time_cell9))),
time=c(start_time_cell1, start_time_cell2, start_time_cell3,
start_time_cell4, start_time_cell5, start_time_cell6,
start_time_cell7, start_time_cell8, start_time_cell9,
signaling_time_cell1, signaling_time_cell2, signaling_time_cell3,
signaling_time_cell4, signaling_time_cell5, signaling_time_cell6,
signaling_time_cell7, signaling_time_cell8, signaling_time_cell9))
df_cat_signaling$STorSIG <- factor(df_cat_signaling$STorSIG, levels=c("Signaling time", "Total reaction time"))
g_sig_st <- ggplot(df_cat_signaling, aes(x = cell, y = time, fill = STorSIG)) +
geom_boxplot(outlier.shape = NA) +
#geom_jitter(size = 0.02, alpha = 0.3) +
geom_point(size = 0.1, alpha = 0.5, position=position_jitterdodge()) +
scale_fill_manual(values=c("darkturquoise", "gray70"))+
coord_cartesian(ylim = c(0, 57), clip = "off") +
annotate("text", x = 5, y = 57, label="Hypothesis: signal transfer time < total reaction time", size = 7/ggplot2::.pt) +
annotate("text", x = 1:9, y = rep(51.5, 9), label=rep("NS",9), size = 7/ggplot2::.pt) +
annotate("segment", x = 0.7, xend = 1.3, y = 49, yend = 49, size = 0.5,
arrow = arrow(ends = "both", length = unit(0, "mm"))) +
annotate("segment", x = 1.7, xend = 2.3, y = 49, yend = 49, size = 0.5,
arrow = arrow(ends = "both", length = unit(0, "mm"))) +
annotate("segment", x = 2.7, xend = 3.3, y = 49, yend = 49, size = 0.5,
arrow = arrow(ends = "both", length = unit(0, "mm"))) +
annotate("segment", x = 3.7, xend = 4.3, y = 49, yend = 49, size = 0.5,
arrow = arrow(ends = "both", length = unit(0, "mm"))) +
annotate("segment", x = 4.7, xend = 5.3, y = 49, yend = 49, size = 0.5,
arrow = arrow(ends = "both", length = unit(0, "mm"))) +
annotate("segment", x = 5.7, xend = 6.3, y = 49, yend = 49, size = 0.5,
arrow = arrow(ends = "both", length = unit(0, "mm"))) +
annotate("segment", x = 6.7, xend = 7.3, y = 49, yend = 49, size = 0.5,
arrow = arrow(ends = "both", length = unit(0, "mm"))) +
annotate("segment", x = 7.7, xend = 8.3, y = 49, yend = 49, size = 0.5,
arrow = arrow(ends = "both", length = unit(0, "mm"))) +
annotate("segment", x = 8.7, xend = 9.3, y = 49, yend = 49, size = 0.5,
arrow = arrow(ends = "both", length = unit(0, "mm"))) +
theme_bw() +
theme(plot.title=element_text(size=7),
axis.title.y=element_text(size=7),
axis.title.x=element_blank(),
axis.text=element_text(size=7),
#axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = c(0.77, 0.7),
legend.background = element_rect(fill="transparent"),
legend.title = element_blank(),
legend.text = element_text(size=7),
#legend.margin=margin(0, 0, 0, -5),
legend.spacing.x = unit(0.7, 'mm'),
legend.key.width = unit(2, "mm"),
plot.tag = element_text(size = 12, face = "bold")) +
labs(y="Time (min)")
##### Explanation of reaction time
g_text <- ggplot() + theme_void() +
geom_segment(aes(x = -1, y = 0, xend = 1.05, yend = 0),
arrow = arrow(length = unit(0.3, "cm")), size = 1) +
geom_curve(aes(x = -1, y = 0, xend = -0.7, yend = 0), curvature = -0.6, size = 0.2) +
geom_curve(aes(x = -0.7, y = 0, xend = 0.7, yend = 0), curvature = -0.2, size = 0.2) +
geom_curve(aes(x = 0.7, y = 0, xend = 1, yend = 0), curvature = -0.6, size = 0.2) +
geom_curve(aes(x = -1, y = 0, xend = 1, yend = 0), curvature = 0.2, size = 0.2) +
geom_segment(aes(x = -1, y = 0.2, xend = -1, yend = -0.6), lty = 2, size = 0.2) +
geom_segment(aes(x = 1.05, y = 0.2, xend = 1.05, yend = -0.6), lty = 2, size = 0.2) +
theme(plot.tag = element_text(size = 12, face = "bold")) +
coord_cartesian(xlim = c(-1, 1.3), ylim = c(-1.5, 0.5), clip = "off") +
annotate("text", x=0, y=-0.44, label = "Total reaction time\n(= start time)", size = 7/ggplot2::.pt) +
annotate("text", x=-0.85, y=0.3, label = "Warm-up\ntime", size = 7/ggplot2::.pt) +
annotate("text", x=0, y=0.3, label = "Signal transfer time", size = 7/ggplot2::.pt) +
annotate("text", x=0.85, y=0.3, label = "Warm-up\ntime", size = 7/ggplot2::.pt) +
annotate("text", x=-1, y=-0.72, label = "Start of \nmicrobeam", size = 7/ggplot2::.pt) +
annotate("text", x=1.05, y=-0.79, label = "Start of \nchloroplast\naccumulation", size = 7/ggplot2::.pt)
## Integrate figures
g <- (g_text + labs(tag = "A")) + (g_sig_st + labs(tag = "B")) +
plot_layout(ncol = 2, widths = c(1,1.3))
set.seed(1)
suppressWarnings(ggsave(paste0(out, "/signaltime_vs_totaltime.pdf"),
g, height = 70, width = 183, units = "mm"))
## Boxplot
df_cat_signaling <- data.frame(
cell=c(rep("Cell 1", length(start_time_cell1)),
rep("Cell 2", length(start_time_cell2)),
rep("Cell 3", length(start_time_cell3)),
rep("Cell 4", length(start_time_cell4)),
rep("Cell 5", length(start_time_cell5)),
rep("Cell 6", length(start_time_cell6)),
rep("Cell 7", length(start_time_cell7)),
rep("Cell 8", length(start_time_cell8)),
rep("Cell 9", length(start_time_cell9)),
rep("Cell 1", length(signaling_time_cell1)),
rep("Cell 2", length(signaling_time_cell2)),
rep("Cell 3", length(signaling_time_cell3)),
rep("Cell 4", length(signaling_time_cell4)),
rep("Cell 5", length(signaling_time_cell5)),
rep("Cell 6", length(signaling_time_cell6)),
rep("Cell 7", length(signaling_time_cell7)),
rep("Cell 8", length(signaling_time_cell8)),
rep("Cell 9", length(signaling_time_cell9))),
STorSIG = c(rep("Total reaction time",
length(start_time_cell1)+length(start_time_cell2)+length(start_time_cell3)+
length(start_time_cell4)+length(start_time_cell5)+length(start_time_cell6)+
length(start_time_cell7)+length(start_time_cell8)+length(start_time_cell9)),
rep("Signal transfer time",
length(signaling_time_cell1)+length(signaling_time_cell2)+length(signaling_time_cell3)+
length(signaling_time_cell4)+length(signaling_time_cell5)+length(signaling_time_cell6)+
length(signaling_time_cell7)+length(signaling_time_cell8)+length(signaling_time_cell9))),
time=c(start_time_cell1, start_time_cell2, start_time_cell3,
start_time_cell4, start_time_cell5, start_time_cell6,
start_time_cell7, start_time_cell8, start_time_cell9,
signaling_time_cell1, signaling_time_cell2, signaling_time_cell3,
signaling_time_cell4, signaling_time_cell5, signaling_time_cell6,
signaling_time_cell7, signaling_time_cell8, signaling_time_cell9))
df_cat_signaling$STorSIG <- factor(df_cat_signaling$STorSIG, levels=c("Signaling time", "Total reaction time"))
g_sig_st <- ggplot(df_cat_signaling, aes(x = cell, y = time, fill = STorSIG)) +
geom_boxplot(outlier.shape = NA) +
#geom_jitter(size = 0.02, alpha = 0.3) +
geom_point(size = 0.1, alpha = 0.5, position=position_jitterdodge()) +
scale_fill_manual(values=c("darkturquoise", "gray70"))+
coord_cartesian(ylim = c(0, 57), clip = "off") +
annotate("text", x = 5, y = 57, label="Hypothesis: signal transfer time < total reaction time", size = 7/ggplot2::.pt) +
annotate("text", x = 1:9, y = rep(51.5, 9), label=rep("NS",9), size = 7/ggplot2::.pt) +
annotate("segment", x = 0.7, xend = 1.3, y = 49, yend = 49, size = 0.5,
arrow = arrow(ends = "both", length = unit(0, "mm"))) +
annotate("segment", x = 1.7, xend = 2.3, y = 49, yend = 49, size = 0.5,
arrow = arrow(ends = "both", length = unit(0, "mm"))) +
annotate("segment", x = 2.7, xend = 3.3, y = 49, yend = 49, size = 0.5,
arrow = arrow(ends = "both", length = unit(0, "mm"))) +
annotate("segment", x = 3.7, xend = 4.3, y = 49, yend = 49, size = 0.5,
arrow = arrow(ends = "both", length = unit(0, "mm"))) +
annotate("segment", x = 4.7, xend = 5.3, y = 49, yend = 49, size = 0.5,
arrow = arrow(ends = "both", length = unit(0, "mm"))) +
annotate("segment", x = 5.7, xend = 6.3, y = 49, yend = 49, size = 0.5,
arrow = arrow(ends = "both", length = unit(0, "mm"))) +
annotate("segment", x = 6.7, xend = 7.3, y = 49, yend = 49, size = 0.5,
arrow = arrow(ends = "both", length = unit(0, "mm"))) +
annotate("segment", x = 7.7, xend = 8.3, y = 49, yend = 49, size = 0.5,
arrow = arrow(ends = "both", length = unit(0, "mm"))) +
annotate("segment", x = 8.7, xend = 9.3, y = 49, yend = 49, size = 0.5,
arrow = arrow(ends = "both", length = unit(0, "mm"))) +
theme_bw() +
theme(plot.title=element_text(size=7),
axis.title.y=element_text(size=7),
axis.title.x=element_blank(),
axis.text=element_text(size=7),
#axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = c(0.77, 0.7),
legend.background = element_rect(fill="transparent"),
legend.title = element_blank(),
legend.text = element_text(size=7),
#legend.margin=margin(0, 0, 0, -5),
legend.spacing.x = unit(0.7, 'mm'),
legend.key.width = unit(2, "mm"),
plot.tag = element_text(size = 12, face = "bold")) +
labs(y="Time (min)")
##### Explanation of reaction time
g_text <- ggplot() + theme_void() +
geom_segment(aes(x = -1, y = 0, xend = 1.05, yend = 0),
arrow = arrow(length = unit(0.3, "cm")), size = 1) +
geom_curve(aes(x = -1, y = 0, xend = -0.7, yend = 0), curvature = -0.6, size = 0.2) +
geom_curve(aes(x = -0.7, y = 0, xend = 0.7, yend = 0), curvature = -0.2, size = 0.2) +
geom_curve(aes(x = 0.7, y = 0, xend = 1, yend = 0), curvature = -0.6, size = 0.2) +
geom_curve(aes(x = -1, y = 0, xend = 1, yend = 0), curvature = 0.2, size = 0.2) +
geom_segment(aes(x = -1, y = 0.2, xend = -1, yend = -0.6), lty = 2, size = 0.2) +
geom_segment(aes(x = 1.05, y = 0.2, xend = 1.05, yend = -0.6), lty = 2, size = 0.2) +
theme(plot.tag = element_text(size = 12, face = "bold")) +
coord_cartesian(xlim = c(-1, 1.3), ylim = c(-1.5, 0.5), clip = "off") +
annotate("text", x=0, y=-0.44, label = "Total reaction time\n(= start time)", size = 7/ggplot2::.pt) +
annotate("text", x=-0.85, y=0.3, label = "Warm-up\ntime", size = 7/ggplot2::.pt) +
annotate("text", x=0, y=0.3, label = "Signal transfer time", size = 7/ggplot2::.pt) +
annotate("text", x=0.85, y=0.3, label = "Warm-up\ntime", size = 7/ggplot2::.pt) +
annotate("text", x=-1, y=-0.72, label = "Start of \nmicrobeam", size = 7/ggplot2::.pt) +
annotate("text", x=1.05, y=-0.79, label = "Start of \nchloroplast\naccumulation", size = 7/ggplot2::.pt)
## Integrate figures
g <- (g_text + labs(tag = "A")) + (g_sig_st + labs(tag = "B")) +
plot_layout(ncol = 2, widths = c(1,1.3))
set.seed(1)
suppressWarnings(ggsave(paste0(out, "/signaltime_vs_totaltime.pdf"),
g, height = 70, width = 183, units = "mm"))
## Boxplot
df_cat_signaling <- data.frame(
cell=c(rep("Cell 1", length(start_time_cell1)),
rep("Cell 2", length(start_time_cell2)),
rep("Cell 3", length(start_time_cell3)),
rep("Cell 4", length(start_time_cell4)),
rep("Cell 5", length(start_time_cell5)),
rep("Cell 6", length(start_time_cell6)),
rep("Cell 7", length(start_time_cell7)),
rep("Cell 8", length(start_time_cell8)),
rep("Cell 9", length(start_time_cell9)),
rep("Cell 1", length(signaling_time_cell1)),
rep("Cell 2", length(signaling_time_cell2)),
rep("Cell 3", length(signaling_time_cell3)),
rep("Cell 4", length(signaling_time_cell4)),
rep("Cell 5", length(signaling_time_cell5)),
rep("Cell 6", length(signaling_time_cell6)),
rep("Cell 7", length(signaling_time_cell7)),
rep("Cell 8", length(signaling_time_cell8)),
rep("Cell 9", length(signaling_time_cell9))),
STorSIG = c(rep("Total reaction time",
length(start_time_cell1)+length(start_time_cell2)+length(start_time_cell3)+
length(start_time_cell4)+length(start_time_cell5)+length(start_time_cell6)+
length(start_time_cell7)+length(start_time_cell8)+length(start_time_cell9)),
rep("Signal transfer time",
length(signaling_time_cell1)+length(signaling_time_cell2)+length(signaling_time_cell3)+
length(signaling_time_cell4)+length(signaling_time_cell5)+length(signaling_time_cell6)+
length(signaling_time_cell7)+length(signaling_time_cell8)+length(signaling_time_cell9))),
time=c(start_time_cell1, start_time_cell2, start_time_cell3,
start_time_cell4, start_time_cell5, start_time_cell6,
start_time_cell7, start_time_cell8, start_time_cell9,
signaling_time_cell1, signaling_time_cell2, signaling_time_cell3,
signaling_time_cell4, signaling_time_cell5, signaling_time_cell6,
signaling_time_cell7, signaling_time_cell8, signaling_time_cell9))
df_cat_signaling$STorSIG <- factor(df_cat_signaling$STorSIG, levels=c("Signal transfer time", "Total reaction time"))
g_sig_st <- ggplot(df_cat_signaling, aes(x = cell, y = time, fill = STorSIG)) +
geom_boxplot(outlier.shape = NA) +
#geom_jitter(size = 0.02, alpha = 0.3) +
geom_point(size = 0.1, alpha = 0.5, position=position_jitterdodge()) +
scale_fill_manual(values=c("darkturquoise", "gray70"))+
coord_cartesian(ylim = c(0, 57), clip = "off") +
annotate("text", x = 5, y = 57, label="Hypothesis: signal transfer time < total reaction time", size = 7/ggplot2::.pt) +
annotate("text", x = 1:9, y = rep(51.5, 9), label=rep("NS",9), size = 7/ggplot2::.pt) +
annotate("segment", x = 0.7, xend = 1.3, y = 49, yend = 49, size = 0.5,
arrow = arrow(ends = "both", length = unit(0, "mm"))) +
annotate("segment", x = 1.7, xend = 2.3, y = 49, yend = 49, size = 0.5,
arrow = arrow(ends = "both", length = unit(0, "mm"))) +
annotate("segment", x = 2.7, xend = 3.3, y = 49, yend = 49, size = 0.5,
arrow = arrow(ends = "both", length = unit(0, "mm"))) +
annotate("segment", x = 3.7, xend = 4.3, y = 49, yend = 49, size = 0.5,
arrow = arrow(ends = "both", length = unit(0, "mm"))) +
annotate("segment", x = 4.7, xend = 5.3, y = 49, yend = 49, size = 0.5,
arrow = arrow(ends = "both", length = unit(0, "mm"))) +
annotate("segment", x = 5.7, xend = 6.3, y = 49, yend = 49, size = 0.5,
arrow = arrow(ends = "both", length = unit(0, "mm"))) +
annotate("segment", x = 6.7, xend = 7.3, y = 49, yend = 49, size = 0.5,
arrow = arrow(ends = "both", length = unit(0, "mm"))) +
annotate("segment", x = 7.7, xend = 8.3, y = 49, yend = 49, size = 0.5,
arrow = arrow(ends = "both", length = unit(0, "mm"))) +
annotate("segment", x = 8.7, xend = 9.3, y = 49, yend = 49, size = 0.5,
arrow = arrow(ends = "both", length = unit(0, "mm"))) +
theme_bw() +
theme(plot.title=element_text(size=7),
axis.title.y=element_text(size=7),
axis.title.x=element_blank(),
axis.text=element_text(size=7),
#axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = c(0.77, 0.7),
legend.background = element_rect(fill="transparent"),
legend.title = element_blank(),
legend.text = element_text(size=7),
#legend.margin=margin(0, 0, 0, -5),
legend.spacing.x = unit(0.7, 'mm'),
legend.key.width = unit(2, "mm"),
plot.tag = element_text(size = 12, face = "bold")) +
labs(y="Time (min)")
##### Explanation of reaction time
g_text <- ggplot() + theme_void() +
geom_segment(aes(x = -1, y = 0, xend = 1.05, yend = 0),
arrow = arrow(length = unit(0.3, "cm")), size = 1) +
geom_curve(aes(x = -1, y = 0, xend = -0.7, yend = 0), curvature = -0.6, size = 0.2) +
geom_curve(aes(x = -0.7, y = 0, xend = 0.7, yend = 0), curvature = -0.2, size = 0.2) +
geom_curve(aes(x = 0.7, y = 0, xend = 1, yend = 0), curvature = -0.6, size = 0.2) +
geom_curve(aes(x = -1, y = 0, xend = 1, yend = 0), curvature = 0.2, size = 0.2) +
geom_segment(aes(x = -1, y = 0.2, xend = -1, yend = -0.6), lty = 2, size = 0.2) +
geom_segment(aes(x = 1.05, y = 0.2, xend = 1.05, yend = -0.6), lty = 2, size = 0.2) +
theme(plot.tag = element_text(size = 12, face = "bold")) +
coord_cartesian(xlim = c(-1, 1.3), ylim = c(-1.5, 0.5), clip = "off") +
annotate("text", x=0, y=-0.44, label = "Total reaction time\n(= start time)", size = 7/ggplot2::.pt) +
annotate("text", x=-0.85, y=0.3, label = "Warm-up\ntime", size = 7/ggplot2::.pt) +
annotate("text", x=0, y=0.3, label = "Signal transfer time", size = 7/ggplot2::.pt) +
annotate("text", x=0.85, y=0.3, label = "Warm-up\ntime", size = 7/ggplot2::.pt) +
annotate("text", x=-1, y=-0.72, label = "Start of \nmicrobeam", size = 7/ggplot2::.pt) +
annotate("text", x=1.05, y=-0.79, label = "Start of \nchloroplast\naccumulation", size = 7/ggplot2::.pt)
## Integrate figures
g <- (g_text + labs(tag = "A")) + (g_sig_st + labs(tag = "B")) +
plot_layout(ncol = 2, widths = c(1,1.3))
set.seed(1)
suppressWarnings(ggsave(paste0(out, "/signaltime_vs_totaltime.pdf"),
g, height = 70, width = 183, units = "mm"))
